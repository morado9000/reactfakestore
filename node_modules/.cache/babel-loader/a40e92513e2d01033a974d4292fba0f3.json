{"ast":null,"code":"var _jsxFileName = \"/home/matt/Code/React Course/reactfakestore/src/components/products/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { CheckoutCard, CheckoutCardBox, CheckoutCardDescripBox, CheckoutCardDescrip, CheckoutCardButtonBox, CheckoutCardButton, CheckoutCardList, CheckoutForm, CheckoutTotal } from \"../styled/StyledCheckout\"; //import { useContext } from \"react\";\n//import { CartContext } from \"../contexts/CartContext\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { selectCart } from \"../../features/cartSlice\";\nimport { clearCart } from \"../../features/cartSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  //   const { productCart, clearCart } = useContext(CartContext);\n  const productCart = useSelector(selectCart);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  function resetCart() {\n    dispatch(clearCart());\n    navigate(\"/products\");\n  }\n\n  const sum = () => {\n    let mysum = 0;\n\n    for (var i = 0; i < productCart.length; i++) {\n      mysum += Number(productCart[i].product.price) * productCart[i].quantity;\n    }\n\n    return mysum;\n  };\n\n  return /*#__PURE__*/_jsxDEV(CheckoutCardList, {\n    children: productCart.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutForm, {\n        type: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Customer Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), \"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this), \"Shipping Address: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 35\n        }, this), \"Billing Address: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this), \"Credit Card Info: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: resetCart,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CheckoutCardBox, {\n        children: productCart.map(product => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckoutCard, {\n            type: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(CheckoutCardDescripBox, {\n              children: [/*#__PURE__*/_jsxDEV(CheckoutCardDescrip, {\n                children: product.product.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CheckoutCardDescrip, {\n                children: [\"Quantity: \", product.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CheckoutCardButtonBox, {\n              children: [\"Price: \", product.product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CheckoutTotal, {\n            children: [\"Total: $\", sum()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items to checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"vbSSonFD3lWISPn2tWwhxj7/ijU=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/matt/Code/React Course/reactfakestore/src/components/products/Checkout.js"],"names":["CheckoutCard","CheckoutCardBox","CheckoutCardDescripBox","CheckoutCardDescrip","CheckoutCardButtonBox","CheckoutCardButton","CheckoutCardList","CheckoutForm","CheckoutTotal","useNavigate","selectCart","clearCart","useDispatch","useSelector","Checkout","props","productCart","dispatch","navigate","resetCart","sum","mysum","i","length","Number","product","price","quantity","map","title"],"mappings":"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","sourcesContent":["import { CheckoutCard, CheckoutCardBox, CheckoutCardDescripBox, CheckoutCardDescrip, CheckoutCardButtonBox, CheckoutCardButton, CheckoutCardList, CheckoutForm, CheckoutTotal} from \"../styled/StyledCheckout\";\n//import { useContext } from \"react\";\n//import { CartContext } from \"../contexts/CartContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectCart } from \"../../features/cartSlice\";\nimport { clearCart } from \"../../features/cartSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Checkout = (props) => {\n\n //   const { productCart, clearCart } = useContext(CartContext);\n    const productCart = useSelector(selectCart);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n\n    function resetCart(){\n        dispatch(clearCart());\n        navigate(\"/products\");\n\n    }\n\n    const sum = () => {\n        let mysum = 0;\n        for(var i=0; i<productCart.length; i++){\n            mysum += (Number(productCart[i].product.price)*productCart[i].quantity);\n        }\n        return mysum;\n    }\n\n    return (\n        <CheckoutCardList>\n        { productCart.length > 0 ? (\n            <>\n            \n            <CheckoutForm type=\"form\">\n                <h1>Customer Information</h1>\n                Name: <input type=\"text\" />\n                Shipping Address: <input type=\"text\" />\n                Billing Address: <input type=\"text\" />\n                Credit Card Info: <input type=\"text\" />\n                <button type=\"submit\" onClick={resetCart}>Submit</button>\n            </CheckoutForm>\n\n            <CheckoutCardBox>\n            {productCart.map(product =>\n                <>\n                    <CheckoutCard type=\"div\">\n                        <CheckoutCardDescripBox>\n                            <CheckoutCardDescrip>{product.product.title}</CheckoutCardDescrip>\n                            <CheckoutCardDescrip>Quantity: {product.quantity}</CheckoutCardDescrip>\n                            \n                        </CheckoutCardDescripBox>      \n                        <CheckoutCardButtonBox>Price: {product.product.price}</CheckoutCardButtonBox>          \n                    </CheckoutCard>\n                    <CheckoutTotal>Total: ${sum()}</CheckoutTotal>\n                 </>\n            )}\n            </CheckoutCardBox>\n            </>\n        ) : (\n            <p>No items to checkout</p>\n        )}\n    </CheckoutCardList>\n    )\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}