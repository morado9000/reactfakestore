{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    productCart: []\n  },\n  reducers: {\n    appendToCart: (state, action) => {\n      const {\n        product,\n        quantity\n      } = action.payload;\n      let tempCart = [...state.productCart];\n\n      for (var i = 0; i < tempCart.length; i++) {\n        if (product.id == tempCart[i].product.id) {\n          console.log(\"Repeat\");\n          tempCart[i].quantity = tempCart[i].quantity + quantity;\n          state.productCart = tempCart;\n          return;\n        }\n      }\n\n      tempCart.push({\n        product: product,\n        quantity: quantity\n      });\n      state.productCart = [...tempCart];\n    },\n    deleteFromCart: (state, action) => {\n      let tempCart = [...state.productCart];\n      console.log(action.payload);\n      tempCart.splice(action.payload, 1);\n      state.productCart = tempCart;\n    },\n    clearCart: state => {\n      state.productCart = [];\n    }\n  }\n});\nexport const {\n  appendToCart,\n  deleteFromCart,\n  clearCart\n} = cartSlice.actions;\nexport const selectCart = state => state.cart.productCart;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/matt/Code/React Course/reactfakestore/src/features/cartSlice.js"],"names":["createSlice","cartSlice","name","initialState","productCart","reducers","appendToCart","state","action","product","quantity","payload","tempCart","i","length","id","console","log","push","deleteFromCart","splice","clearCart","actions","selectCart","cart","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GAFmB;AAKjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwBF,MAAM,CAACG,OAArC;AACA,UAAIC,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAACH,WAAV,CAAf;;AACA,WAAI,IAAIS,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,QAAQ,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,YAAGJ,OAAO,CAACM,EAAR,IAAcH,QAAQ,CAACC,CAAD,CAAR,CAAYJ,OAAZ,CAAoBM,EAArC,EAAwC;AACpCC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAL,UAAAA,QAAQ,CAACC,CAAD,CAAR,CAAYH,QAAZ,GAAuBE,QAAQ,CAACC,CAAD,CAAR,CAAYH,QAAZ,GAAuBA,QAA9C;AACAH,UAAAA,KAAK,CAACH,WAAN,GAAoBQ,QAApB;AACA;AACH;AACJ;;AACDA,MAAAA,QAAQ,CAACM,IAAT,CAAc;AACVT,QAAAA,OAAO,EAAEA,OADC;AAEVC,QAAAA,QAAQ,EAAEA;AAFA,OAAd;AAIAH,MAAAA,KAAK,CAACH,WAAN,GAAoB,CAAC,GAAGQ,QAAJ,CAApB;AACH,KAjBK;AAkBNO,IAAAA,cAAc,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAII,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAACH,WAAV,CAAf;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACG,OAAnB;AACAC,MAAAA,QAAQ,CAACQ,MAAT,CAAgBZ,MAAM,CAACG,OAAvB,EAAgC,CAAhC;AACAJ,MAAAA,KAAK,CAACH,WAAN,GAAoBQ,QAApB;AACH,KAvBK;AAwBNS,IAAAA,SAAS,EAAGd,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACH,WAAN,GAAoB,EAApB;AACH;AA1BK;AALuB,CAAD,CAA7B;AAmCP,OAAO,MAAM;AAAEE,EAAAA,YAAF;AAAgBa,EAAAA,cAAhB;AAAgCE,EAAAA;AAAhC,IAA8CpB,SAAS,CAACqB,OAA9D;AACP,OAAO,MAAMC,UAAU,GAAIhB,KAAD,IAAWA,KAAK,CAACiB,IAAN,CAAWpB,WAAzC;AACP,eAAeH,SAAS,CAACwB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        productCart: [],\n    },\n    reducers: {\n        appendToCart: (state, action) => {\n            const { product, quantity } = action.payload;\n            let tempCart = [...state.productCart];\n            for(var i=0; i<tempCart.length; i++){\n                if(product.id == tempCart[i].product.id){\n                    console.log(\"Repeat\")\n                    tempCart[i].quantity = tempCart[i].quantity + quantity;\n                    state.productCart = tempCart;\n                    return;\n                }\n            }\n            tempCart.push({\n                product: product,\n                quantity: quantity\n            })\n            state.productCart = [...tempCart];\n        },\n        deleteFromCart: (state, action) => {\n            let tempCart = [...state.productCart];\n            console.log(action.payload);\n            tempCart.splice(action.payload, 1);\n            state.productCart = tempCart;\n        },\n        clearCart: (state) => {\n            state.productCart = [];\n        }\n    }\n});\n\nexport const { appendToCart, deleteFromCart, clearCart } = cartSlice.actions;\nexport const selectCart = (state) => state.cart.productCart;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}